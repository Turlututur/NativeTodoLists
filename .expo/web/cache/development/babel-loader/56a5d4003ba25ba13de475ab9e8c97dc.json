{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SliderComponent } from \"react-native-web/dist/index\";\nimport TodoList from \"../components/TodoList\";\nimport { getTaskList, createTaskLists, getUserId } from \"../API/todoAPI\";\nimport { TokenContext } from \"../Context/Context\";\nimport { UsernameContext } from \"../Context/Context\";\nimport { withSafeAreaInsets } from 'react-native-safe-area-context';\nimport todoData from \"../Helpers/todoData\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction TaskList(_ref) {\n  var username = _ref.username,\n      token = _ref.token;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var callback = function callback(username, token) {\n    getTaskList(username, token).then(function (taskList) {\n      setTodos(taskList);\n    });\n  };\n\n  useEffect(function () {\n    callback(username, token);\n  }, [username, token]);\n  return _jsx(_Fragment, {\n    children: todos.map(function (value, index) {\n      return _jsxs(Text, {\n        children: [value.title, \" ; Id : \", value.id]\n      }, index);\n    })\n  });\n}\n\nexport default function TodoLists() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Liste des TodoLists :\"\n    }), _jsx(TokenContext.Consumer, {\n      children: function children(_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            token = _ref3[0],\n            setToken = _ref3[1];\n\n        return _jsx(UsernameContext.Consumer, {\n          children: function children(_ref4) {\n            var _ref5 = _slicedToArray(_ref4, 2),\n                username = _ref5[0],\n                setUsername = _ref5[1];\n\n            return _jsxs(_Fragment, {\n              children: [getUserId(username, token).then(function (res) {\n                console.log(res);\n              }), _jsx(TaskList, {\n                username: username,\n                token: token\n              })]\n            });\n          }\n        });\n      }\n    })]\n  });\n}\nvar screen = Dimensions.get(\"screen\");\nvar styles = StyleSheet.create({\n  container: {\n    height: screen.width * 0.8,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 250\n  }\n});","map":{"version":3,"names":["useState","useEffect","useCallback","SliderComponent","TodoList","getTaskList","createTaskLists","getUserId","TokenContext","UsernameContext","withSafeAreaInsets","todoData","TaskList","username","token","todos","setTodos","callback","then","taskList","map","value","index","title","id","TodoLists","styles","container","setToken","setUsername","res","console","log","screen","Dimensions","get","StyleSheet","create","height","width","flex","backgroundColor","alignItems","justifyContent","marginTop"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/Screen/TodoListsScreen.js"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react'\r\nimport { View, Text, Button, Dimensions, StyleSheet, SliderComponent } from 'react-native'\r\nimport TodoList from '../components/TodoList';\r\n\r\nimport { getTaskList, createTaskLists, getUserId } from '../API/todoAPI';\r\nimport { TokenContext } from '../Context/Context';\r\nimport { UsernameContext } from '../Context/Context';\r\nimport { withSafeAreaInsets } from 'react-native-safe-area-context';\r\nimport todoData from '../Helpers/todoData';\r\n\r\n\r\nfunction TaskList({username, token}) {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // const callback = useCallback(() => {\r\n  //   getTaskList(username,token)\r\n  //   .then(taskList => {\r\n  //     setTodos(taskList)\r\n  //   })\r\n  // }, [username, token])\r\n\r\n\r\n  const callback = (username, token) => {\r\n    getTaskList(username,token)\r\n    .then(taskList => {\r\n      setTodos(taskList)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    callback(username, token)\r\n  }, [username, token])\r\n\r\n  return (\r\n    <>\r\n      {todos.map((value, index) => {\r\n        return <Text key={index}>{value.title} ; Id : {value.id}</Text>\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default function TodoLists(){\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n          <Text>Liste des TodoLists :</Text>\r\n\r\n            <TokenContext.Consumer>\r\n          {([token, setToken]) => (\r\n            <UsernameContext.Consumer>\r\n              {([username, setUsername]) => \r\n                <>\r\n                  {getUserId(username, token).then(res => {\r\n                    console.log(res)\r\n                  })}\r\n                  <TaskList username={username} token={token} />\r\n                  {/* <Button\r\n                    onPress={() => createTaskLists(getUserId(username, token), \"le test\", token)}\r\n                    title='Créer une tâche quelquonque'\r\n                  /> */}\r\n                </>\r\n              }\r\n              \r\n            </UsernameContext.Consumer>\r\n          )}\r\n        </TokenContext.Consumer>\r\n\r\n        \r\n\r\n            {/* <TodoList/> */}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst screen = Dimensions.get(\"screen\");\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: screen.width * 0.8,\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 250,\r\n  },\r\n});"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;;;;;;SACqDC,e;AACrD,OAAOC,QAAP;AAEA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,SAAvC;AACA,SAASC,YAAT;AACA,SAASC,eAAT;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,QAAP;;;;;AAGA,SAASC,QAAT,OAAqC;EAAA,IAAlBC,QAAkB,QAAlBA,QAAkB;EAAA,IAARC,KAAQ,QAARA,KAAQ;;EACnC,gBAA0Bd,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOe,KAAP;EAAA,IAAcC,QAAd;;EAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACJ,QAAD,EAAWC,KAAX,EAAqB;IACpCT,WAAW,CAACQ,QAAD,EAAUC,KAAV,CAAX,CACCI,IADD,CACM,UAAAC,QAAQ,EAAI;MAChBH,QAAQ,CAACG,QAAD,CAAR;IACD,CAHD;EAID,CALD;;EAOAlB,SAAS,CAAC,YAAM;IACdgB,QAAQ,CAACJ,QAAD,EAAWC,KAAX,CAAR;EACD,CAFQ,EAEN,CAACD,QAAD,EAAWC,KAAX,CAFM,CAAT;EAIA,OACE;IAAA,UACGC,KAAK,CAACK,GAAN,CAAU,UAACC,KAAD,EAAQC,KAAR,EAAkB;MAC3B,OAAO,MAAC,IAAD;QAAA,WAAmBD,KAAK,CAACE,KAAzB,cAAwCF,KAAK,CAACG,EAA9C;MAAA,GAAWF,KAAX,CAAP;IACD,CAFA;EADH,EADF;AAOD;;AAID,eAAe,SAASG,SAAT,GAAoB;EAG/B,OACI,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAGI,KAAC,YAAD,CAAc,QAAd;MAAA,UACD;QAAA;QAAA,IAAEb,KAAF;QAAA,IAASc,QAAT;;QAAA,OACC,KAAC,eAAD,CAAiB,QAAjB;UAAA,UACG;YAAA;YAAA,IAAEf,QAAF;YAAA,IAAYgB,WAAZ;;YAAA,OACC;cAAA,WACGtB,SAAS,CAACM,QAAD,EAAWC,KAAX,CAAT,CAA2BI,IAA3B,CAAgC,UAAAY,GAAG,EAAI;gBACtCC,OAAO,CAACC,GAAR,CAAYF,GAAZ;cACD,CAFA,CADH,EAIE,KAAC,QAAD;gBAAU,QAAQ,EAAEjB,QAApB;gBAA8B,KAAK,EAAEC;cAArC,EAJF;YAAA,EADD;UAAA;QADH,EADD;MAAA;IADC,EAHJ;EAAA,EADJ;AA6BH;AAED,IAAMmB,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC/BV,SAAS,EAAE;IACTW,MAAM,EAAEL,MAAM,CAACM,KAAP,GAAe,GADd;IAETC,IAAI,EAAE,CAFG;IAGTC,eAAe,EAAE,MAHR;IAITC,UAAU,EAAE,QAJH;IAKTC,cAAc,EAAE,QALP;IAMTC,SAAS,EAAE;EANF;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}