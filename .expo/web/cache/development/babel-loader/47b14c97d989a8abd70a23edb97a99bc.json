{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport TodoLists from \"../Screen/TodoLists\";\nimport { TokenContext } from \"../Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  return _jsx(TokenContext.Consumer, {\n    children: function children(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        token = _ref2[0],\n        setToken = _ref2[1];\n      return _jsx(NavigationContainer, {\n        children: token == null ? _jsxs(Tab.Navigator, {\n          children: [_jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"SignIn\",\n            component: SignInScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"SignUp\",\n            component: SignUpScreen\n          })]\n        }) : _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref3) {\n            var route = _ref3.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref4) {\n                var focused = _ref4.focused,\n                  color = _ref4.color,\n                  size = _ref4.size;\n                var iconName;\n                if (route.name === 'Home') {\n                  iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n                } else if (route.name === 'Settings') {\n                  iconName = focused ? 'ios-list-box' : 'ios-list';\n                }\n              },\n              tabBarActiveTintColor: 'tomato',\n              tabBarInactiveTintColor: 'gray'\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"Home\",\n            component: HomeScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"TodoLists\",\n            component: TodoListsScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"SignOut\",\n            component: SignOutScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"TodoList\",\n            component: TodoLists\n          })]\n        })\n      });\n    }\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","TodoListsScreen","HomeScreen","SignInScreen","SignUpScreen","SignOutScreen","TodoLists","TokenContext","Tab","Navigation","token","setToken","headerStyle","backgroundColor","headerTintColor","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/Navigation/Navigation.js"],"sourcesContent":["// npm i --save @react-navigation/bottom-tabs @react-navigation/native \r\n\r\nimport React from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\n\r\nimport TodoListsScreen from '../Screen/TodoListsScreen'\r\nimport HomeScreen from '../Screen/HomeScreen'\r\nimport SignInScreen from '../Screen/SignInScreen'\r\nimport SignUpScreen from '../Screen/SignUpScreen'\r\nimport SignOutScreen from '../Screen/SignOutScreen'\r\nimport TodoLists from '../Screen/TodoLists'\r\n\r\nimport { TokenContext } from '../Context/Context'\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nexport default function Navigation () {\r\n  return (\r\n    <TokenContext.Consumer>\r\n      {([token, setToken]) => (\r\n        <NavigationContainer>\r\n          {token == null ? (\r\n            <Tab.Navigator>\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='SignIn' component={SignInScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='SignUp' component={SignUpScreen} />\r\n            </Tab.Navigator>\r\n          ) : (\r\n            <Tab.Navigator\r\n            \r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color, size }) => {\r\n                let iconName;\r\n    \r\n                if (route.name === 'Home') {\r\n                  iconName = focused\r\n                    ? 'ios-information-circle'\r\n                    : 'ios-information-circle-outline';\r\n                } else if (route.name === 'Settings') {\r\n                  iconName = focused ? 'ios-list-box' : 'ios-list';\r\n                }\r\n              },\r\n              tabBarActiveTintColor: 'tomato',\r\n              tabBarInactiveTintColor: 'gray',\r\n            })}\r\n            >\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='Home' component={HomeScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='TodoLists' component={TodoListsScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='SignOut' component={SignOutScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='TodoList' component={TodoLists} />\r\n            </Tab.Navigator>\r\n          )}\r\n        </NavigationContainer>\r\n      )}\r\n    </TokenContext.Consumer>\r\n  )\r\n}\r\n"],"mappings":";;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAExE,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAEhB,SAASC,YAAY;AAA4B;AAAA;AAEjD,IAAMC,GAAG,GAAGR,wBAAwB,EAAE;AAGtC,eAAe,SAASS,UAAU,GAAI;EACpC,OACE,KAAC,YAAY,CAAC,QAAQ;IAAA,UACnB;MAAA;QAAEC,KAAK;QAAEC,QAAQ;MAAA,OAChB,KAAC,mBAAmB;QAAA,UACjBD,KAAK,IAAI,IAAI,GACZ,MAAC,GAAG,CAAC,SAAS;UAAA,WACZ,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACE,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAEX;UAAa,EAAG,EACvI,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACS,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAEV;UAAa,EAAG;QAAA,EACzH,GAEhB,MAAC,GAAG,CAAC,SAAS;UAEd,aAAa,EAAE;YAAA,IAAGW,KAAK,SAALA,KAAK;YAAA,OAAQ;cAC7BC,UAAU,EAAE,2BAA8B;gBAAA,IAA3BC,OAAO,SAAPA,OAAO;kBAAEC,KAAK,SAALA,KAAK;kBAAEC,IAAI,SAAJA,IAAI;gBACjC,IAAIC,QAAQ;gBAEZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;kBACzBD,QAAQ,GAAGH,OAAO,GACd,wBAAwB,GACxB,gCAAgC;gBACtC,CAAC,MAAM,IAAIF,KAAK,CAACM,IAAI,KAAK,UAAU,EAAE;kBACpCD,QAAQ,GAAGH,OAAO,GAAG,cAAc,GAAG,UAAU;gBAClD;cACF,CAAC;cACDK,qBAAqB,EAAE,QAAQ;cAC/BC,uBAAuB,EAAE;YAC3B,CAAC;UAAA,CAAE;UAAA,WAED,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACX,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,MAAM;YAAC,SAAS,EAAEZ;UAAW,EAAG,EACnI,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACU,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,WAAW;YAAC,SAAS,EAAEb;UAAgB,EAAG,EAC7I,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACW,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,SAAS;YAAC,SAAS,EAAET;UAAc,EAAG,EACzI,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACO,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,UAAU;YAAC,SAAS,EAAER;UAAU,EAAG;QAAA;MAEzI,EACmB;IAAA;EACvB,EACqB;AAE5B"},"metadata":{},"sourceType":"module"}