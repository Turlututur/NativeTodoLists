{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport todoData from \"../Helpers/todoData\";\nimport TodoItem from \"./TodoItem\";\nimport { TokenContext } from \"../Context/Context\";\nimport { UsernameContext } from \"../Context/Context\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nexport default function TodoList(props) {\n\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var updateCount = function updateCount(offset) {\n    setCount(count + offset);\n  };\n  var _useState3 = useState(todoData),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todos = _useState4[0],\n    setTodos = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newTodoText = _useState6[0],\n    setNewTodoText = _useState6[1];\n\n  var deleteTodo = function deleteTodo(id) {\n    var newTodos = todos.filter(function (item) {\n      return item.id != id;\n    });\n    setTodos(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var addNewTodo = function addNewTodo() {\n    var newId = Math.max.apply(Math, _toConsumableArray(todos.map(function (item) {\n      return item.id;\n    }))) + 1;\n    var newTodo = {\n      id: newId,\n      content: newTodoText,\n      done: false\n    };\n    setTodos([].concat(_toConsumableArray(todos), [newTodo]));\n  };\n  var checkAll = function checkAll() {\n    var newTodos = todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: true\n      };\n    });\n    setTodos(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var checkNone = function checkNone() {\n    var newTodos = todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: false\n      };\n    });\n    setTodos(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Voici votre liste de t\\xE2ches\"\n    }), _jsxs(Text, {\n      children: [\"Nombre de t\\xE2ches r\\xE9alis\\xE9es : \", count]\n    }), _jsxs(Text, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Button, {\n        title: \"CheckAll\",\n        onPress: checkAll\n      }), _jsx(Button, {\n        title: \"CheckNone\",\n        onPress: checkNone\n      })]\n    }), _jsx(FlatList, {\n      style: {\n        paddingLeft: 10\n      },\n      data: todos,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TodoItem, {\n          todoDelete: deleteTodo,\n          onPressed: updateCount,\n          item: item\n        });\n      }\n    }), _jsxs(Text, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Button, {\n        title: \"Finies\"\n      }), _jsx(Button, {\n        title: \"En cours\"\n      })]\n    }), _jsx(TextInput, {\n      onChangeText: setNewTodoText,\n      placeholder: \"Saisir la nouvelle t\\xE2che\",\n      onSubmitEditing: addNewTodo,\n      value: newTodoText\n    }), _jsx(Button, {\n      title: \"Ajouter la t\\xE2che\",\n      onPress: addNewTodo\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  allSwitch: {\n    justifyContent: 'flex-start'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","todoData","TodoItem","TokenContext","UsernameContext","TodoList","props","count","setCount","updateCount","offset","todos","setTodos","newTodoText","setNewTodoText","deleteTodo","id","newTodos","filter","item","done","length","addNewTodo","newId","Math","max","map","newTodo","content","checkAll","checkNone","styles","container","flexDirection","paddingLeft","StyleSheet","create","allSwitch","justifyContent"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, TextInput, Button, Text, FlatList, Switch } from 'react-native';\r\n\r\nimport todoData from '../Helpers/todoData';\r\nimport TodoItem from './TodoItem';\r\nimport { TokenContext } from '../Context/Context'\r\nimport { UsernameContext } from '../Context/Context'\r\n\r\n/*Dois faire une requete dans les données pour afficher la todolist*/ \r\n\r\nexport default function TodoList(props){\r\n    /*ICI utiliser useEffects, on a des props je crois\r\n    const [data, setData] = useState([])*/\r\n\r\n    \r\n    /* const [data, setData] = useState([]);  */\r\n    const [count, setCount] = useState(0);\r\n    const updateCount = (offset) => {setCount(count + offset)};\r\n    const [todos, setTodos] = useState(todoData);\r\n    const [newTodoText, setNewTodoText] = useState(\"\");\r\n\r\n    /* useEffect(() => {taskLists(token, user).then(d => setData(d))}, []); */\r\n\r\n    const deleteTodo = (id) => {\r\n        const newTodos = todos.filter(item => item.id != id)\r\n        setTodos(newTodos)\r\n        setCount(newTodos.filter(item => item.done).length)\r\n    };\r\n\r\n    const addNewTodo = () => {\r\n        const newId = Math.max(...todos.map(item => item.id)) + 1\r\n        const newTodo = {\r\n            id:newId,\r\n            content:newTodoText,\r\n            done:false\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    const checkAll = () => {\r\n        const newTodos = todos.map( item => {\r\n            return {\r\n                id:item.id,\r\n                content:item.content,\r\n                done:true\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n        setCount(newTodos.filter(item => item.done).length)\r\n    }\r\n\r\n    const checkNone = () => {\r\n        const newTodos = todos.map( item => {\r\n            return {\r\n                id:item.id,\r\n                content:item.content,\r\n                done:false\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n        setCount(newTodos.filter(item => item.done).length)\r\n    }\r\n\r\n/*     const displayNotDone = () => {\r\n        \r\n    } */\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <Text>Voici votre liste de tâches</Text>\r\n        <Text>Nombre de tâches réalisées : {count}</Text>\r\n        <Text style={{flexDirection: 'row'}}>\r\n            <Button \r\n                title=\"CheckAll\"\r\n                onPress={checkAll}\r\n            />\r\n            \r\n            <Button\r\n                title=\"CheckNone\"\r\n                onPress={checkNone}\r\n            />\r\n        </Text>\r\n        <FlatList\r\n            style={{ paddingLeft: 10 }}\r\n            data={todos}\r\n            renderItem={({item}) => <TodoItem todoDelete={deleteTodo} onPressed={updateCount} item={item} />} />   \r\n\r\n            <Text style={{flexDirection: 'row'}}>\r\n            <Button \r\n                title=\"Finies\"\r\n            />\r\n            \r\n            <Button\r\n                title=\"En cours\"\r\n                /* onPress={displayNotDone} */\r\n            />\r\n        </Text>\r\n             \r\n        <TextInput\r\n            onChangeText={setNewTodoText}\r\n            placeholder='Saisir la nouvelle tâche'\r\n            onSubmitEditing={addNewTodo}\r\n            value={newTodoText}    \r\n        />\r\n        <Button\r\n            title=\"Ajouter la tâche\"\r\n            onPress={addNewTodo}\r\n        />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        \r\n    },\r\n    allSwitch: {\r\n        justifyContent: 'flex-start'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}