{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getTaskList, createTaskLists, getUserId, deleteTaskLists } from \"../API/todoAPI\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar MyStack = function MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"TaskList\",\n        component: TaskList,\n        options: {\n          title: 'Welcome'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      })]\n    })\n  });\n};\nexport default function TaskList(_ref) {\n  var username = _ref.username,\n    token = _ref.token;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todos = _useState2[0],\n    setTodos = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userId = _useState4[0],\n    setUserId = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newTodoText = _useState6[0],\n    setNewTodoText = _useState6[1];\n  var navigation = useNavigation();\n  var callback = function callback(username, token) {\n    getTaskList(username, token).then(function (taskList) {\n      setTodos(taskList);\n    });\n  };\n  useEffect(function () {\n    callback(username, token);\n  }, [username, token]);\n  var getId = function getId(username, token) {\n    getUserId(username, token).then(function (id) {\n      setUserId(id[0].id);\n      console.log(id[0].id);\n    });\n  };\n  useEffect(function () {\n    getId(username, token);\n  }, [username, token]);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Text, {\n      style: styles.text,\n      children: [\"ID de l'user : \", userId]\n    }), console.log(todos), _jsx(Text, {\n      style: styles.text,\n      children: \"Liste des TodoLists :\"\n    }), _jsx(FlatList, {\n      style: {\n        textAlign: 'left'\n      },\n      data: todos,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('Profile', {\n                id: item.id\n              });\n            }\n            ,\n            children: _jsx(Text, {\n              style: {\n                color: '#D6D5A8',\n                textDecorationLine: 'underline'\n              },\n              children: item.title\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function () {\n              var _ref3 = _asyncToGenerator(function* (e) {\n                e.preventDefault();\n                console.log('suppression de ' + item.title + \" \" + item.id);\n                yield deleteTaskLists(item.id, item.title, userId, token);\n                callback(username, token);\n              });\n              return function (_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }(),\n            children: _jsx(Image, {\n              source: require(\"../assets/trash-can-outline.png\"),\n              style: {\n                height: 24,\n                width: 24\n              }\n            })\n          })]\n        });\n      }\n    }), _jsx(TextInput, {\n      style: styles.text_input,\n      onChangeText: function onChangeText(newValue) {\n        return setNewTodoText(newValue);\n      },\n      placeholder: \"liste de t\\xE2che\",\n      onSubmitEditing: function () {\n        var _ref4 = _asyncToGenerator(function* (e) {\n          e.preventDefault();\n          yield createTaskLists(userId, newTodoText, token);\n          callback(username, token);\n        });\n        return function (_x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }()\n    }), _jsx(Pressable, {\n      style: styles.pressable,\n      onPress: function () {\n        var _ref5 = _asyncToGenerator(function* (e) {\n          e.preventDefault();\n          yield createTaskLists(userId, newTodoText, token);\n          callback(username, token);\n        });\n        return function (_x3) {\n          return _ref5.apply(this, arguments);\n        };\n      }(),\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Ajouter la t\\xE2che\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1B2430',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 250\n  },\n  text: {\n    color: '#D6D5A8'\n  },\n  link: {\n    color: '#816797',\n    textDecorationLine: 'underline'\n  },\n  pressable: {\n    backgroundColor: '#51557E',\n    color: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px'\n  },\n  text_input: {\n    backgroundColor: '#D6D5A8',\n    color: '#1B2430',\n    margin: 5\n  }\n});\nvar ProfileScreen = function ProfileScreen(_ref6) {\n  var navigation = _ref6.navigation,\n    route = _ref6.route;\n  return _jsxs(Text, {\n    children: [\"This is \", route.params.id]\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","getTaskList","createTaskLists","getUserId","deleteTaskLists","useNavigation","createNativeStackNavigator","Stack","MyStack","TaskList","title","ProfileScreen","username","token","todos","setTodos","userId","setUserId","newTodoText","setNewTodoText","navigation","callback","then","taskList","getId","id","console","log","styles","text","textAlign","item","flexDirection","navigate","color","textDecorationLine","e","preventDefault","require","height","width","text_input","newValue","pressable","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingTop","link","borderRadius","margin","route","params"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Pressable, TouchableOpacity, StyleSheet, TextInput, Image} from 'react-native'\r\nimport { getTaskList, createTaskLists, getUserId, deleteTaskLists } from '../API/todoAPI';\r\nimport { FlatList } from 'react-native-web';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst MyStack = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"TaskList\"\r\n          component={TaskList}\r\n          options={{ title: 'Welcome' }}\r\n        />\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default function TaskList({username, token}) {\r\n\r\n\r\n    \r\n\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [userId, setUserId] = useState();\r\n    const [newTodoText, setNewTodoText] = useState(\"\");\r\n    const navigation = useNavigation();\r\n  \r\n    const callback = (username, token) => {\r\n      getTaskList(username,token)\r\n      .then(taskList => {\r\n        setTodos(taskList)\r\n      })\r\n    }\r\n  \r\n    useEffect(() => {\r\n      callback(username, token)\r\n    }, [username, token])\r\n  \r\n  \r\n    const getId = (username, token) => {\r\n      getUserId(username, token)\r\n      .then(id => {\r\n        setUserId(id[0].id)\r\n        console.log(id[0].id)\r\n      })\r\n    } \r\n  \r\n    useEffect(() => {\r\n      getId(username, token)\r\n    }, [username, token])\r\n  \r\n  \r\n    return (\r\n      <>\r\n      <Text style={styles.text}>ID de l'user : {userId}</Text>\r\n      {console.log(todos)}\r\n      <Text style={styles.text}>Liste des TodoLists :</Text>\r\n      <FlatList\r\n        style={{ textAlign:'left' }}\r\n        data={todos}\r\n        renderItem={({item}) => \r\n        <View style={{flexDirection: 'row'}}>\r\n          <TouchableOpacity onPress={() => \r\n            navigation.navigate('Profile', {id: item.id})\r\n            // https://reactnavigation.org/docs/params/ !!!\r\n            //console.log('todo : navigation')\r\n            }>\r\n            <Text style={{color: '#D6D5A8', textDecorationLine: 'underline'}}>{item.title}</Text>\r\n          </TouchableOpacity> \r\n          <TouchableOpacity \r\n          onPress={ async (e) => {\r\n             //supprime TOUT, viens de la query, j'ai test avec un id particulier en dehors de la flatlist\r\n            e.preventDefault();\r\n            console.log('suppression de ' + item.title +\" \"+ item.id);\r\n            await deleteTaskLists(item.id, item.title ,userId, token);\r\n            callback(username, token);\r\n          }}\r\n          >\r\n            <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\r\n          </TouchableOpacity>\r\n        </View>\r\n         } \r\n      />\r\n        <TextInput\r\n        style={styles.text_input}\r\n          onChangeText={(newValue) => setNewTodoText(newValue)}\r\n          placeholder='liste de tâche'\r\n          onSubmitEditing={ async (e) => {\r\n            e.preventDefault();\r\n            await createTaskLists(userId, newTodoText, token);\r\n            callback(username, token);\r\n          }}   \r\n        />\r\n        <Pressable\r\n        style={styles.pressable}\r\n          onPress={ async (e) => {\r\n            e.preventDefault();\r\n            await createTaskLists(userId, newTodoText, token);\r\n            callback(username, token);\r\n          }}\r\n        >\r\n        <Text style={styles.text}>Ajouter la tâche</Text>\r\n        </Pressable>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#1B2430',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: 250\r\n    },\r\n    text : {\r\n      color: '#D6D5A8'\r\n    },\r\n    link : {\r\n      color: '#816797',\r\n      textDecorationLine: 'underline'\r\n    },\r\n    pressable: {\r\n      backgroundColor: '#51557E',\r\n      color: 'white',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius:'10px'\r\n    },\r\n    text_input: {\r\n      //borderWidth: 1,\r\n      backgroundColor: '#D6D5A8',\r\n      color: '#1B2430',\r\n      margin: 5\r\n    }\r\n  })\r\n\r\n  const ProfileScreen = ({ navigation, route }) => {\r\n    return <Text>This is {route.params.id}</Text>;\r\n  };  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnD,SAASC,WAAW,EAAEC,eAAe,EAAEC,SAAS,EAAEC,eAAe;AAAyB;AAE1F,SAASC,aAAa,QAAQ,0BAA0B;AAExD,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC;AAAA;AAAA;AAE5E,IAAMC,KAAK,GAAGD,0BAA0B,EAAE;AAE1C,IAAME,OAAO,GAAG,SAAVA,OAAO,GAAS;EACpB,OACE,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MAAA,WACd,KAAC,KAAK,CAAC,MAAM;QACX,IAAI,EAAC,UAAU;QACf,SAAS,EAAEC,QAAS;QACpB,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAU;MAAE,EAC9B,EACF,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,SAAS,EAAEC;MAAc,EAAG;IAAA;EACzC,EACE;AAE1B,CAAC;AAED,eAAe,SAASF,QAAQ,OAAoB;EAAA,IAAlBG,QAAQ,QAARA,QAAQ;IAAEC,KAAK,QAALA,KAAK;EAM7C,gBAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/Bc,KAAK;IAAEC,QAAQ;EACtB,iBAA4Bf,QAAQ,EAAE;IAAA;IAA/BgB,MAAM;IAAEC,SAAS;EACxB,iBAAsCjB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CkB,WAAW;IAAEC,cAAc;EAClC,IAAMC,UAAU,GAAGf,aAAa,EAAE;EAElC,IAAMgB,QAAQ,GAAG,SAAXA,QAAQ,CAAIT,QAAQ,EAAEC,KAAK,EAAK;IACpCZ,WAAW,CAACW,QAAQ,EAACC,KAAK,CAAC,CAC1BS,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChBR,QAAQ,CAACQ,QAAQ,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDxB,SAAS,CAAC,YAAM;IACdsB,QAAQ,CAACT,QAAQ,EAAEC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACD,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAGrB,IAAMW,KAAK,GAAG,SAARA,KAAK,CAAIZ,QAAQ,EAAEC,KAAK,EAAK;IACjCV,SAAS,CAACS,QAAQ,EAAEC,KAAK,CAAC,CACzBS,IAAI,CAAC,UAAAG,EAAE,EAAI;MACVR,SAAS,CAACQ,EAAE,CAAC,CAAC,CAAC,CAACA,EAAE,CAAC;MACnBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC,CAAC,CAAC,CAACA,EAAE,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC;EAED1B,SAAS,CAAC,YAAM;IACdyB,KAAK,CAACZ,QAAQ,EAAEC,KAAK,CAAC;EACxB,CAAC,EAAE,CAACD,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAGrB,OACE;IAAA,WACA,MAAC,IAAI;MAAC,KAAK,EAAEe,MAAM,CAACC,IAAK;MAAA,8BAAiBb,MAAM;IAAA,EAAQ,EACvDU,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC,EACnB,KAAC,IAAI;MAAC,KAAK,EAAEc,MAAM,CAACC,IAAK;MAAA;IAAA,EAA6B,EACtD,KAAC,QAAQ;MACP,KAAK,EAAE;QAAEC,SAAS,EAAC;MAAO,CAAE;MAC5B,IAAI,EAAEhB,KAAM;MACZ,UAAU,EAAE;QAAA,IAAEiB,IAAI,SAAJA,IAAI;QAAA,OAClB,MAAC,IAAI;UAAC,KAAK,EAAE;YAACC,aAAa,EAAE;UAAK,CAAE;UAAA,WAClC,KAAC,gBAAgB;YAAC,OAAO,EAAE;cAAA,OACzBZ,UAAU,CAACa,QAAQ,CAAC,SAAS,EAAE;gBAACR,EAAE,EAAEM,IAAI,CAACN;cAAE,CAAC,CAAC;YAAA;YAG5C;YAAA,UACD,KAAC,IAAI;cAAC,KAAK,EAAE;gBAACS,KAAK,EAAE,SAAS;gBAAEC,kBAAkB,EAAE;cAAW,CAAE;cAAA,UAAEJ,IAAI,CAACrB;YAAK;UAAQ,EACpE,EACnB,KAAC,gBAAgB;YACjB,OAAO;cAAA,8BAAG,WAAO0B,CAAC,EAAK;gBAErBA,CAAC,CAACC,cAAc,EAAE;gBAClBX,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGI,IAAI,CAACrB,KAAK,GAAE,GAAG,GAAEqB,IAAI,CAACN,EAAE,CAAC;gBACzD,MAAMrB,eAAe,CAAC2B,IAAI,CAACN,EAAE,EAAEM,IAAI,CAACrB,KAAK,EAAEM,MAAM,EAAEH,KAAK,CAAC;gBACzDQ,QAAQ,CAACT,QAAQ,EAAEC,KAAK,CAAC;cAC3B,CAAC;cAAA;gBAAA;cAAA;YAAA,GAAC;YAAA,UAEA,KAAC,KAAK;cAAC,MAAM,EAAEyB,OAAO,mCAAoC;cAAC,KAAK,EAAE;gBAAEC,MAAM,EAAE,EAAE;gBAAEC,KAAK,EAAE;cAAG;YAAE;UAAG,EAC9E;QAAA,EACd;MAAA;IACL,EACF,EACA,KAAC,SAAS;MACV,KAAK,EAAEZ,MAAM,CAACa,UAAW;MACvB,YAAY,EAAE,sBAACC,QAAQ;QAAA,OAAKvB,cAAc,CAACuB,QAAQ,CAAC;MAAA,CAAC;MACrD,WAAW,EAAC,mBAAgB;MAC5B,eAAe;QAAA,8BAAG,WAAON,CAAC,EAAK;UAC7BA,CAAC,CAACC,cAAc,EAAE;UAClB,MAAMnC,eAAe,CAACc,MAAM,EAAEE,WAAW,EAAEL,KAAK,CAAC;UACjDQ,QAAQ,CAACT,QAAQ,EAAEC,KAAK,CAAC;QAC3B,CAAC;QAAA;UAAA;QAAA;MAAA;IAAC,EACF,EACF,KAAC,SAAS;MACV,KAAK,EAAEe,MAAM,CAACe,SAAU;MACtB,OAAO;QAAA,8BAAG,WAAOP,CAAC,EAAK;UACrBA,CAAC,CAACC,cAAc,EAAE;UAClB,MAAMnC,eAAe,CAACc,MAAM,EAAEE,WAAW,EAAEL,KAAK,CAAC;UACjDQ,QAAQ,CAACT,QAAQ,EAAEC,KAAK,CAAC;QAC3B,CAAC;QAAA;UAAA;QAAA;MAAA,GAAC;MAAA,UAEJ,KAAC,IAAI;QAAC,KAAK,EAAEe,MAAM,CAACC,IAAK;QAAA;MAAA;IAAwB,EACrC;EAAA,EACX;AAEP;AAGA,IAAMD,MAAM,GAAGgB,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDtB,IAAI,EAAG;IACLK,KAAK,EAAE;EACT,CAAC;EACDkB,IAAI,EAAG;IACLlB,KAAK,EAAE,SAAS;IAChBC,kBAAkB,EAAE;EACtB,CAAC;EACDQ,SAAS,EAAE;IACTK,eAAe,EAAE,SAAS;IAC1Bd,KAAK,EAAE,OAAO;IACde,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBG,YAAY,EAAC;EACf,CAAC;EACDZ,UAAU,EAAE;IAEVO,eAAe,EAAE,SAAS;IAC1Bd,KAAK,EAAE,SAAS;IAChBoB,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,IAAM3C,aAAa,GAAG,SAAhBA,aAAa,QAA8B;EAAA,IAAxBS,UAAU,SAAVA,UAAU;IAAEmC,KAAK,SAALA,KAAK;EACxC,OAAO,MAAC,IAAI;IAAA,uBAAUA,KAAK,CAACC,MAAM,CAAC/B,EAAE;EAAA,EAAQ;AAC/C,CAAC"},"metadata":{},"sourceType":"module"}