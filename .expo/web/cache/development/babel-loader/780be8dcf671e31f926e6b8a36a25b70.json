{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport todoData from \"../Helpers/todoData\";\nimport TodoItem from \"./TodoItem\";\nimport { TokenContext } from \"../Context/Context\";\nimport { UsernameContext } from \"../Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoList(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var updateCount = function updateCount(offset) {\n    setCount(count + offset);\n  };\n\n  var _useState3 = useState(todoData),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newTodoText = _useState6[0],\n      setNewTodoText = _useState6[1];\n\n  var deleteTodo = function deleteTodo(id) {\n    var newTodos = todos.filter(function (item) {\n      return item.id != id;\n    });\n    setTodos(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n\n  var addNewTodo = function addNewTodo() {\n    var newId = Math.max.apply(Math, _toConsumableArray(todos.map(function (item) {\n      return item.id;\n    }))) + 1;\n    var newTodo = {\n      id: newId,\n      content: newTodoText,\n      done: false\n    };\n    setTodos([].concat(_toConsumableArray(todos), [newTodo]));\n  };\n\n  var checkAll = function checkAll() {\n    var newTodos = todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: true\n      };\n    });\n    setTodos(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n\n  var checkNone = function checkNone() {\n    var newTodos = todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: false\n      };\n    });\n    setTodos(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Voici votre liste de t\\xE2ches\"\n    }), _jsxs(Text, {\n      children: [\"Nombre de t\\xE2ches r\\xE9alis\\xE9es : \", count]\n    }), _jsxs(Text, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Button, {\n        title: \"CheckAll\",\n        onPress: checkAll\n      }), _jsx(Button, {\n        title: \"CheckNone\",\n        onPress: checkNone\n      })]\n    }), _jsx(FlatList, {\n      style: {\n        paddingLeft: 10\n      },\n      data: todos,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TodoItem, {\n          todoDelete: deleteTodo,\n          onPressed: updateCount,\n          item: item\n        });\n      }\n    }), _jsxs(Text, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Button, {\n        title: \"Finies\"\n      }), _jsx(Button, {\n        title: \"En cours\"\n      })]\n    }), _jsx(TextInput, {\n      onChangeText: setNewTodoText,\n      placeholder: \"Saisir la nouvelle t\\xE2che\",\n      onSubmitEditing: addNewTodo,\n      value: newTodoText\n    }), _jsx(Button, {\n      title: \"Ajouter la t\\xE2che\",\n      onPress: addNewTodo\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  allSwitch: {\n    justifyContent: 'flex-start'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","todoData","TodoItem","TokenContext","UsernameContext","TodoList","props","count","setCount","updateCount","offset","todos","setTodos","newTodoText","setNewTodoText","deleteTodo","id","newTodos","filter","item","done","length","addNewTodo","newId","Math","max","map","newTodo","content","checkAll","checkNone","styles","container","flexDirection","paddingLeft","StyleSheet","create","allSwitch","justifyContent"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, TextInput, Button, Text, FlatList, Switch } from 'react-native';\r\n\r\nimport todoData from '../Helpers/todoData';\r\nimport TodoItem from './TodoItem';\r\nimport { TokenContext } from '../Context/Context'\r\nimport { UsernameContext } from '../Context/Context'\r\n\r\n/*Dois faire une requete dans les données pour afficher la todolist*/ \r\n\r\nexport default function TodoList(props){\r\n    /*ICI utiliser useEffects, on a des props je crois\r\n    const [data, setData] = useState([])*/\r\n\r\n    \r\n    /* const [data, setData] = useState([]);  */\r\n    const [count, setCount] = useState(0);\r\n    const updateCount = (offset) => {setCount(count + offset)};\r\n    const [todos, setTodos] = useState(todoData);\r\n    const [newTodoText, setNewTodoText] = useState(\"\");\r\n\r\n    /* useEffect(() => {taskLists(token, user).then(d => setData(d))}, []); */\r\n\r\n    const deleteTodo = (id) => {\r\n        const newTodos = todos.filter(item => item.id != id)\r\n        setTodos(newTodos)\r\n        setCount(newTodos.filter(item => item.done).length)\r\n    };\r\n\r\n    const addNewTodo = () => {\r\n        const newId = Math.max(...todos.map(item => item.id)) + 1\r\n        const newTodo = {\r\n            id:newId,\r\n            content:newTodoText,\r\n            done:false\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    const checkAll = () => {\r\n        const newTodos = todos.map( item => {\r\n            return {\r\n                id:item.id,\r\n                content:item.content,\r\n                done:true\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n        setCount(newTodos.filter(item => item.done).length)\r\n    }\r\n\r\n    const checkNone = () => {\r\n        const newTodos = todos.map( item => {\r\n            return {\r\n                id:item.id,\r\n                content:item.content,\r\n                done:false\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n        setCount(newTodos.filter(item => item.done).length)\r\n    }\r\n\r\n/*     const displayNotDone = () => {\r\n        \r\n    } */\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <Text>Voici votre liste de tâches</Text>\r\n        <Text>Nombre de tâches réalisées : {count}</Text>\r\n        <Text style={{flexDirection: 'row'}}>\r\n            <Button \r\n                title=\"CheckAll\"\r\n                onPress={checkAll}\r\n            />\r\n            \r\n            <Button\r\n                title=\"CheckNone\"\r\n                onPress={checkNone}\r\n            />\r\n        </Text>\r\n        <FlatList\r\n            style={{ paddingLeft: 10 }}\r\n            data={todos}\r\n            renderItem={({item}) => <TodoItem todoDelete={deleteTodo} onPressed={updateCount} item={item} />} />   \r\n\r\n            <Text style={{flexDirection: 'row'}}>\r\n            <Button \r\n                title=\"Finies\"\r\n            />\r\n            \r\n            <Button\r\n                title=\"En cours\"\r\n                /* onPress={displayNotDone} */\r\n            />\r\n        </Text>\r\n             \r\n        <TextInput\r\n            onChangeText={setNewTodoText}\r\n            placeholder='Saisir la nouvelle tâche'\r\n            onSubmitEditing={addNewTodo}\r\n            value={newTodoText}    \r\n        />\r\n        <Button\r\n            title=\"Ajouter la tâche\"\r\n            onPress={addNewTodo}\r\n        />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        \r\n    },\r\n    allSwitch: {\r\n        justifyContent: 'flex-start'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}