{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport TodoLists from \"../Screen/TodoLists\";\nimport { TokenContext } from \"../Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  return _jsx(TokenContext.Consumer, {\n    children: function children(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        token = _ref2[0],\n        setToken = _ref2[1];\n      return _jsxs(NavigationContainer, {\n        children: [token == null ? _jsxs(Tab.Navigator, {\n          screenOptions: {\n            tabBarActiveTintColor: '#1B2430',\n            tabBarInactiveTintColor: 'gray',\n            tabBarActiveBackgroundColor: '#816797',\n            tabBarInactiveBackgroundColor: '#51557E'\n          },\n          children: [_jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"Connexion\",\n            component: SignInScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"S'inscire\",\n            component: SignUpScreen\n          })]\n        }) : _jsxs(Tab.Navigator, {\n          screenOptions: {\n            tabBarActiveTintColor: '#1B2430',\n            tabBarInactiveTintColor: 'gray',\n            tabBarActiveBackgroundColor: '#816797',\n            tabBarInactiveBackgroundColor: '#51557E'\n          },\n          children: [_jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"Accueil\",\n            component: HomeScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"Mes listes\",\n            component: TodoListsScreen\n          }), _jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTintColor: '#D6D5A8'\n            },\n            name: \"Deconnexion\",\n            component: SignOutScreen\n          })]\n        }), _jsx(NavigationContainer, {\n          children: _jsx(Stack.Navigator, {\n            children: _jsx(Stack.Screen, {\n              options: {\n                headerStyle: {\n                  backgroundColor: '#1B2430'\n                },\n                headerTintColor: '#D6D5A8'\n              },\n              name: \"Ma Todolist\",\n              component: TodoLists,\n              initialParams: {\n                id: \"\",\n                title: \"\"\n              }\n            })\n          })\n        })]\n      });\n    }\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","TodoListsScreen","HomeScreen","SignInScreen","SignUpScreen","SignOutScreen","TodoLists","TokenContext","Stack","Tab","Navigation","token","setToken","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","headerStyle","backgroundColor","headerTintColor","id","title"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/Navigation/Navigation.js"],"sourcesContent":["// npm i --save @react-navigation/bottom-tabs @react-navigation/native \r\n\r\nimport React from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport TodoListsScreen from '../Screen/TodoListsScreen'\r\nimport HomeScreen from '../Screen/HomeScreen'\r\nimport SignInScreen from '../Screen/SignInScreen'\r\nimport SignUpScreen from '../Screen/SignUpScreen'\r\nimport SignOutScreen from '../Screen/SignOutScreen'\r\nimport TodoLists from '../Screen/TodoLists'\r\nimport { TokenContext } from '../Context/Context'\r\n\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function Navigation () {\r\n  return (\r\n    <TokenContext.Consumer>\r\n      {([token, setToken]) => (\r\n        <NavigationContainer>\r\n          {token == null ? (\r\n            <Tab.Navigator\r\n              screenOptions={{\r\n                tabBarActiveTintColor: '#1B2430',\r\n                tabBarInactiveTintColor: 'gray',\r\n                tabBarActiveBackgroundColor: '#816797',\r\n                tabBarInactiveBackgroundColor: '#51557E'\r\n              }}\r\n            >\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='Connexion' component={SignInScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name=\"S'inscire\" component={SignUpScreen} />\r\n            </Tab.Navigator>\r\n          ) : (\r\n            <Tab.Navigator\r\n              screenOptions={{\r\n                tabBarActiveTintColor: '#1B2430',\r\n                tabBarInactiveTintColor: 'gray',\r\n                tabBarActiveBackgroundColor: '#816797',\r\n                tabBarInactiveBackgroundColor: '#51557E'\r\n              }}\r\n            >\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='Accueil' component={HomeScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='Mes listes' component={TodoListsScreen} />\r\n              <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='Deconnexion' component={SignOutScreen} />\r\n              {/* <Tab.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name='Ma Todolist' component={TodoLists} /> */}\r\n            </Tab.Navigator>\r\n            \r\n          )}\r\n          <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen options={{headerStyle: {backgroundColor: '#1B2430'}, headerTintColor: '#D6D5A8'}} name=\"Ma Todolist\" component={TodoLists} initialParams={{ id: \"\", title:\"\" }}/>\r\n        </Stack.Navigator>\r\n        </NavigationContainer>\r\n        </NavigationContainer>\r\n      )}\r\n    </TokenContext.Consumer>\r\n  )\r\n}\r\n"],"mappings":";;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAChB,SAASC,YAAY;AAA4B;AAAA;AAGjD,IAAMC,KAAK,GAAGR,oBAAoB,EAAE;AACpC,IAAMS,GAAG,GAAGV,wBAAwB,EAAE;AAEtC,eAAe,SAASW,UAAU,GAAI;EACpC,OACE,KAAC,YAAY,CAAC,QAAQ;IAAA,UACnB;MAAA;QAAEC,KAAK;QAAEC,QAAQ;MAAA,OAChB,MAAC,mBAAmB;QAAA,WACjBD,KAAK,IAAI,IAAI,GACZ,MAAC,GAAG,CAAC,SAAS;UACZ,aAAa,EAAE;YACbE,qBAAqB,EAAE,SAAS;YAChCC,uBAAuB,EAAE,MAAM;YAC/BC,2BAA2B,EAAE,SAAS;YACtCC,6BAA6B,EAAE;UACjC,CAAE;UAAA,WAEF,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACC,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,WAAW;YAAC,SAAS,EAAEhB;UAAa,EAAG,EAC1I,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACc,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,WAAW;YAAC,SAAS,EAAEf;UAAa,EAAG;QAAA,EAC5H,GAEhB,MAAC,GAAG,CAAC,SAAS;UACZ,aAAa,EAAE;YACbS,qBAAqB,EAAE,SAAS;YAChCC,uBAAuB,EAAE,MAAM;YAC/BC,2BAA2B,EAAE,SAAS;YACtCC,6BAA6B,EAAE;UACjC,CAAE;UAAA,WAEF,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACC,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,SAAS;YAAC,SAAS,EAAEjB;UAAW,EAAG,EACtI,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACe,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,YAAY;YAAC,SAAS,EAAElB;UAAgB,EAAG,EAC9I,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cAACgB,WAAW,EAAE;gBAACC,eAAe,EAAE;cAAS,CAAC;cAAEC,eAAe,EAAE;YAAS,CAAE;YAAC,IAAI,EAAC,aAAa;YAAC,SAAS,EAAEd;UAAc,EAAG;QAAA,EAIhJ,EACD,KAAC,mBAAmB;UAAA,UACtB,KAAC,KAAK,CAAC,SAAS;YAAA,UACd,KAAC,KAAK,CAAC,MAAM;cAAC,OAAO,EAAE;gBAACY,WAAW,EAAE;kBAACC,eAAe,EAAE;gBAAS,CAAC;gBAAEC,eAAe,EAAE;cAAS,CAAE;cAAC,IAAI,EAAC,aAAa;cAAC,SAAS,EAAEb,SAAU;cAAC,aAAa,EAAE;gBAAEc,EAAE,EAAE,EAAE;gBAAEC,KAAK,EAAC;cAAG;YAAE;UAAE;QAC/J,EACI;MAAA,EACA;IAAA;EACvB,EACqB;AAE5B"},"metadata":{},"sourceType":"module"}