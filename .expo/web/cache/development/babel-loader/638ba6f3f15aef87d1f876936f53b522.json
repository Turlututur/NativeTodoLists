{"ast":null,"code":"var API_URL = 'http://localhost:4000';\nvar SIGN_IN = 'mutation($username:String!, $password:String!){signIn(username:$username, password:$password)}';\nvar SIGN_UP = 'mutation($username:String!, $password:String!){signUp(username:$username, password:$password)}';\nvar GET_USER_ID = 'query users($username:String!) {users(where: {username: $username}) {id}}';\nvar CREATE_TASK_LISTS = 'mutation($id:ID, $title:String!){createTaskLists(input:{title:$title, owner:{connect:{where:{id:$id}}}}) {taskLists{id, title, owner{id, username}}}}';\nvar CREATE_TASK = 'mutation($taskListID:ID,$taskName:String){createTasks(input:{content:$taskName, done:false, belongsTo:{connect:{where:{id:$taskListID}}}})';\nvar DELETE_TASK_LISTS = 'mutation()';\nvar DELETE_TASK = \"mutation($taskListID:ID, $userID:ID){\\n    deleteTaskLists(\\n      where:{\\n        id:$taskListID,\\n        owner:{\\n          id:$userID\\n        }\\n      }\\n    ) {nodesDeleted}\\n  }\";\nvar TASKLIST = 'query taskLists($username: String!) {taskLists(where: { owner: { username: $username } }) {id title}}';\nexport function signIn(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_IN,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.signIn;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function signUp(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_UP,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.signUp;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function createTaskLists(id, title, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: CREATE_TASK_LISTS,\n      variables: {\n        id: id,\n        title: title\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.createTaskLists;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function createTask(taskId, taskName) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: CREATE_TASK,\n      variables: {\n        taskId: taskId,\n        taskName: taskName\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.createTask;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function getTaskList(username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: TASKLIST,\n      variables: {\n        username: username\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.taskLists;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function getUserId(username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: GET_USER_ID,\n      variables: {\n        username: username\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.users;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function deleteTaskLists(taskID, userID) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: GET_USER_ID,\n      variables: {\n        taskID: taskID,\n        userID: userID\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.users;\n  }).catch(function (error) {\n    throw error;\n  });\n}","map":{"version":3,"names":["API_URL","SIGN_IN","SIGN_UP","GET_USER_ID","CREATE_TASK_LISTS","CREATE_TASK","DELETE_TASK_LISTS","DELETE_TASK","TASKLIST","signIn","username","password","fetch","method","headers","body","JSON","stringify","query","variables","then","response","json","jsonResponse","errors","data","catch","error","signUp","createTaskLists","id","title","token","createTask","taskId","taskName","getTaskList","taskLists","getUserId","users","deleteTaskLists","taskID","userID"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/API/todoAPI.js"],"sourcesContent":["const API_URL = 'http://localhost:4000'\r\n\r\nconst SIGN_IN =\r\n  'mutation($username:String!, $password:String!){signIn(username:$username, password:$password)}'\r\n\r\nconst SIGN_UP =\r\n  'mutation($username:String!, $password:String!){signUp(username:$username, password:$password)}'\r\n\r\nconst GET_USER_ID = \r\n  'query users($username:String!) {users(where: {username: $username}) {id}}'\r\n\r\nconst CREATE_TASK_LISTS =\r\n  'mutation($id:ID, $title:String!){createTaskLists(input:{title:$title, owner:{connect:{where:{id:$id}}}}) {taskLists{id, title, owner{id, username}}}}'\r\n\r\nconst CREATE_TASK = \r\n  'mutation($taskListID:ID,$taskName:String){createTasks(input:{content:$taskName, done:false, belongsTo:{connect:{where:{id:$taskListID}}}})'\r\n\r\nconst DELETE_TASK_LISTS  =\r\n  'mutation()'\r\n\r\nconst DELETE_TASK =\r\n  `mutation($taskListID:ID, $userID:ID){\r\n    deleteTaskLists(\r\n      where:{\r\n        id:$taskListID,\r\n        owner:{\r\n          id:$userID\r\n        }\r\n      }\r\n    ) {nodesDeleted}\r\n  }`\r\n\r\nconst TASKLIST = \r\n  'query taskLists($username: String!) {taskLists(where: { owner: { username: $username } }) {id title}}'\r\n\r\n\r\nexport function signIn (username, password) {\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      query: SIGN_IN,\r\n      variables: {\r\n        username: username,\r\n        password: password\r\n      }\r\n    })\r\n  })\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then(jsonResponse => {\r\n      if (jsonResponse.errors != null) {\r\n        throw jsonResponse.errors[0]\r\n      }\r\n      return jsonResponse.data.signIn\r\n    })\r\n    .catch(error => {\r\n      throw error\r\n    })\r\n}\r\n\r\nexport function signUp (username, password) {\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      query: SIGN_UP,\r\n      variables: {\r\n        username: username,\r\n        password: password\r\n      }\r\n    })\r\n  })\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then(jsonResponse => {\r\n      if (jsonResponse.errors != null) {\r\n        throw jsonResponse.errors[0]\r\n      }\r\n      return jsonResponse.data.signUp\r\n    })\r\n    .catch(error => {\r\n      throw error\r\n    })\r\n}\r\n\r\nexport function createTaskLists(id, title, token) {\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization' : 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      query: CREATE_TASK_LISTS,\r\n      variables: {\r\n        id: id,\r\n        title: title\r\n      }\r\n    })\r\n  })\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then(jsonResponse => {\r\n      if (jsonResponse.errors != null) {\r\n        throw jsonResponse.errors[0]\r\n      }\r\n      return jsonResponse.data.createTaskLists\r\n    })\r\n    .catch(error => {\r\n      throw error\r\n    })\r\n}\r\n\r\nexport function createTask(taskId, taskName) {\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      query: CREATE_TASK,\r\n      variables: {\r\n        taskId: taskId,\r\n        taskName: taskName\r\n      }\r\n    })\r\n  })\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then(jsonResponse => {\r\n      if (jsonResponse.errors != null) {\r\n        throw jsonResponse.errors[0]\r\n      }\r\n      return jsonResponse.data.createTask\r\n    })\r\n    .catch(error => {\r\n      throw error\r\n    })\r\n}\r\n\r\nexport function getTaskList (username,token){\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"Bearer \"+token\r\n    },\r\n    body: JSON.stringify({\r\n      query: TASKLIST,\r\n      variables: {\r\n        username: username\r\n      }\r\n    })\r\n  })\r\n  .then(response => {\r\n    return response.json()\r\n  })\r\n  .then(jsonResponse => {\r\n    if (jsonResponse.errors != null) {\r\n      throw jsonResponse.errors[0]\r\n    }\r\n    return jsonResponse.data.taskLists\r\n  })\r\n  .catch(error => {\r\n    throw error\r\n  })\r\n}\r\n\r\nexport function getUserId (username, token){\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"Bearer \"+token\r\n    },\r\n    body: JSON.stringify({\r\n      query: GET_USER_ID,\r\n      variables: {\r\n        username: username\r\n      }\r\n    })\r\n  })\r\n  .then(response => {\r\n    return response.json()\r\n  })\r\n  .then(jsonResponse => {\r\n    if (jsonResponse.errors != null) {\r\n      throw jsonResponse.errors[0]\r\n    }\r\n    return jsonResponse.data.users\r\n  })\r\n  .catch(error => {\r\n    throw error\r\n  })\r\n}\r\n\r\nexport function deleteTaskLists (taskID, userID){\r\n  return fetch(API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"Bearer \"+token\r\n    },\r\n    body: JSON.stringify({\r\n      query: GET_USER_ID,\r\n      variables: {\r\n        taskID: taskID,\r\n        userID: userID\r\n      }\r\n    })\r\n  })\r\n  .then(response => {\r\n    return response.json()\r\n  })\r\n  .then(jsonResponse => {\r\n    if (jsonResponse.errors != null) {\r\n      throw jsonResponse.errors[0]\r\n    }\r\n    return jsonResponse.data.users\r\n  })\r\n  .catch(error => {\r\n    throw error\r\n  })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}