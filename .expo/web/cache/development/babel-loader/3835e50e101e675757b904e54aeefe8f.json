{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport { TokenContext } from \"../Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  return _jsx(TokenContext.Consumer, {\n    children: function children(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        token = _ref2[0],\n        setToken = _ref2[1];\n      return _jsx(NavigationContainer, {\n        children: token == null ? _jsxs(Tab.Navigator, {\n          children: [_jsx(Tab.Screen, {\n            name: \"SignIn\",\n            component: SignInScreen\n          }), _jsx(Tab.Screen, {\n            name: \"SignUp\",\n            component: SignUpScreen\n          })]\n        }) : _jsxs(Tab.Navigator, {\n          children: [_jsx(Tab.Screen, {\n            options: {\n              headerStyle: {\n                backgroundColor: '#1B2430'\n              },\n              headerTitle: {\n                color: '#D6D5A8'\n              }\n            },\n            name: \"Home\",\n            component: HomeScreen\n          }), _jsx(Tab.Screen, {\n            name: \"TodoLists\",\n            component: TodoListsScreen\n          }), _jsx(Tab.Screen, {\n            name: \"SignOut\",\n            component: SignOutScreen\n          })]\n        })\n      });\n    }\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","TodoListsScreen","HomeScreen","SignInScreen","SignUpScreen","SignOutScreen","TokenContext","Tab","Navigation","token","setToken","headerStyle","backgroundColor","headerTitle","color"],"sources":["C:/Users/Miste/OneDrive/Documents/Travail/Master/M2/IHM - Visu Donnees/ihm-visu-donnees/Navigation/Navigation.js"],"sourcesContent":["// npm i --save @react-navigation/bottom-tabs @react-navigation/native \r\n\r\nimport React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\n\r\nimport TodoListsScreen from '../Screen/TodoListsScreen'\r\nimport HomeScreen from '../Screen/HomeScreen'\r\nimport SignInScreen from '../Screen/SignInScreen'\r\nimport SignUpScreen from '../Screen/SignUpScreen'\r\nimport SignOutScreen from '../Screen/SignOutScreen'\r\n\r\nimport { TokenContext } from '../Context/Context'\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function Navigation () {\r\n  return (\r\n    <TokenContext.Consumer>\r\n      {([token, setToken]) => (\r\n        <NavigationContainer>\r\n          {token == null ? (\r\n            <Tab.Navigator>\r\n              <Tab.Screen name='SignIn' component={SignInScreen} />\r\n              <Tab.Screen name='SignUp' component={SignUpScreen} />\r\n            </Tab.Navigator>\r\n          ) : (\r\n            <Tab.Navigator>\r\n              <Tab.Screen options={{ \r\n                headerStyle: {\r\n                  backgroundColor: '#1B2430' \r\n                },\r\n                headerTitle: {\r\n                  color: '#D6D5A8'\r\n                }\r\n                  }} name='Home' component={HomeScreen} />\r\n              <Tab.Screen name='TodoLists' component={TodoListsScreen} />\r\n              <Tab.Screen name='SignOut' component={SignOutScreen} />\r\n            </Tab.Navigator>\r\n          )}\r\n        </NavigationContainer>\r\n      )}\r\n    </TokenContext.Consumer>\r\n  )\r\n}\r\n"],"mappings":";;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAExE,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,aAAa;AAEpB,SAASC,YAAY;AAA4B;AAAA;AAEjD,IAAMC,GAAG,GAAGP,wBAAwB,EAAE;AAEtC,eAAe,SAASQ,UAAU,GAAI;EACpC,OACE,KAAC,YAAY,CAAC,QAAQ;IAAA,UACnB;MAAA;QAAEC,KAAK;QAAEC,QAAQ;MAAA,OAChB,KAAC,mBAAmB;QAAA,UACjBD,KAAK,IAAI,IAAI,GACZ,MAAC,GAAG,CAAC,SAAS;UAAA,WACZ,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAEN;UAAa,EAAG,EACrD,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAEC;UAAa,EAAG;QAAA,EACvC,GAEhB,MAAC,GAAG,CAAC,SAAS;UAAA,WACZ,KAAC,GAAG,CAAC,MAAM;YAAC,OAAO,EAAE;cACnBO,WAAW,EAAE;gBACXC,eAAe,EAAE;cACnB,CAAC;cACDC,WAAW,EAAE;gBACXC,KAAK,EAAE;cACT;YACE,CAAE;YAAC,IAAI,EAAC,MAAM;YAAC,SAAS,EAAEZ;UAAW,EAAG,EAC5C,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,WAAW;YAAC,SAAS,EAAED;UAAgB,EAAG,EAC3D,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,SAAS;YAAC,SAAS,EAAEI;UAAc,EAAG;QAAA;MAE1D,EACmB;IAAA;EACvB,EACqB;AAE5B"},"metadata":{},"sourceType":"module"}